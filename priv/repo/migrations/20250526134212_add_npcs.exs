defmodule Resdayn.Repo.Migrations.AddNpcs do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:npcs, primary_key: false) do
      add(:id, :text, null: false, primary_key: true)
      add(:name, :text)
      add(:level, :bigint, null: false)
      add(:head_model_id, :text, null: false)
      add(:hair_model_id, :text, null: false)
      add(:disposition, :bigint, null: false)
      add(:global_reputation, :bigint, null: false)
      add(:faction_rank, :bigint)
      add(:gold, :bigint, null: false)
      add(:health, :bigint)
      add(:magicka, :bigint)
      add(:fatigue, :bigint)
      add(:attributes, {:array, :map}, null: false, default: [])
      add(:skills, {:array, :map}, null: false, default: [])
      add(:alert, :map, null: false)
      add(:blood, :text, null: false)
      add(:spell_links, {:array, :map}, null: false, default: [])
      add(:services_offered, {:array, :text}, null: false, default: [])
      add(:items_vendored, {:array, :text}, null: false, default: [])
      add(:transport_options, {:array, :map})
      add(:ai_packages, {:array, :map}, default: [])
      add(:npc_flags, {:array, :text}, null: false, default: [])
      add(:flags, {:array, :text}, null: false, default: [])

      add(
        :script_id,
        references(:scripts,
          column: :id,
          name: "npcs_script_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :race_id,
        references(:races, column: :id, name: "npcs_race_id_fkey", type: :text, prefix: "public"),
        null: false
      )

      add(
        :class_id,
        references(:classes,
          column: :id,
          name: "npcs_class_id_fkey",
          type: :text,
          prefix: "public"
        ),
        null: false
      )

      add(
        :faction_id,
        references(:factions,
          column: :id,
          name: "npcs_faction_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:npcs, "npcs_script_id_fkey"))

    drop(constraint(:npcs, "npcs_race_id_fkey"))

    drop(constraint(:npcs, "npcs_class_id_fkey"))

    drop(constraint(:npcs, "npcs_faction_id_fkey"))

    drop(table(:npcs))
  end
end

defmodule Resdayn.Repo.Migrations.AddOnDeleteToRaceRelationships do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_spell_id_fkey"))

    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_race_id_fkey"))

    alter table(:race_spell_bonuses) do
      modify(
        :race_id,
        references(:races,
          column: :id,
          name: "race_spell_bonuses_race_id_fkey",
          type: :text,
          prefix: "public",
          on_delete: :delete_all
        )
      )

      modify(
        :spell_id,
        references(:spells,
          column: :id,
          name: "race_spell_bonuses_spell_id_fkey",
          type: :text,
          prefix: "public",
          on_delete: :delete_all
        )
      )
    end

    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_skill_id_fkey"))

    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_race_id_fkey"))

    alter table(:race_skill_bonuses) do
      modify(
        :race_id,
        references(:races,
          column: :id,
          name: "race_skill_bonuses_race_id_fkey",
          type: :text,
          prefix: "public",
          on_delete: :delete_all
        )
      )

      modify(
        :skill_id,
        references(:skills,
          column: :id,
          name: "race_skill_bonuses_skill_id_fkey",
          type: :bigint,
          prefix: "public",
          on_delete: :delete_all
        )
      )
    end
  end

  def down do
    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_race_id_fkey"))

    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_skill_id_fkey"))

    alter table(:race_skill_bonuses) do
      modify(
        :skill_id,
        references(:skills,
          column: :id,
          name: "race_skill_bonuses_skill_id_fkey",
          type: :bigint,
          prefix: "public"
        )
      )

      modify(
        :race_id,
        references(:races,
          column: :id,
          name: "race_skill_bonuses_race_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end

    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_race_id_fkey"))

    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_spell_id_fkey"))

    alter table(:race_spell_bonuses) do
      modify(
        :spell_id,
        references(:spells,
          column: :id,
          name: "race_spell_bonuses_spell_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      modify(
        :race_id,
        references(:races,
          column: :id,
          name: "race_spell_bonuses_race_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end
  end
end

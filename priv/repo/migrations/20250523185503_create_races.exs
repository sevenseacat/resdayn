defmodule Resdayn.Repo.Migrations.CreateRaces do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:races, primary_key: false) do
      add(:id, :text, null: false, primary_key: true)
      add(:name, :text, null: false)
      add(:description, :text)
      add(:playable, :boolean, null: false)
      add(:beast, :boolean, null: false)
      add(:male_stats, :map, null: false)
      add(:female_stats, :map, null: false)
      add(:flags, {:array, :text}, null: false, default: [])
    end

    create table(:race_spell_bonuses, primary_key: false) do
      add(
        :race_id,
        references(:races,
          column: :id,
          name: "race_spell_bonuses_race_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(
        :spell_id,
        references(:spells,
          column: :id,
          name: "race_spell_bonuses_spell_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )
    end

    create table(:race_skill_bonuses, primary_key: false) do
      add(:bonus, :bigint, null: false)

      add(
        :race_id,
        references(:races,
          column: :id,
          name: "race_skill_bonuses_race_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(
        :skill_id,
        references(:skills,
          column: :id,
          name: "race_skill_bonuses_skill_id_fkey",
          type: :bigint,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )
    end
  end

  def down do
    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_race_id_fkey"))

    drop(constraint(:race_skill_bonuses, "race_skill_bonuses_skill_id_fkey"))

    drop(table(:race_skill_bonuses))

    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_race_id_fkey"))

    drop(constraint(:race_spell_bonuses, "race_spell_bonuses_spell_id_fkey"))

    drop(table(:race_spell_bonuses))

    drop(table(:races))
  end
end

defmodule Resdayn.Repo.Migrations.CreateFactions do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:factions, primary_key: false) do
      add(:id, :text, null: false, primary_key: true)
      add(:name, :text, null: false)
      add(:ranks, {:array, :map}, null: false, default: [])
      add(:hidden, :boolean, null: false, default: false)
      add(:flags, {:array, :text}, null: false, default: [])

      add(
        :attribute1_id,
        references(:attributes,
          column: :id,
          name: "factions_attribute1_id_fkey",
          type: :bigint,
          prefix: "public"
        ),
        null: false
      )

      add(
        :attribute2_id,
        references(:attributes,
          column: :id,
          name: "factions_attribute2_id_fkey",
          type: :bigint,
          prefix: "public"
        ),
        null: false
      )
    end

    create table(:faction_skills, primary_key: false) do
      add(
        :faction_id,
        references(:factions,
          column: :id,
          name: "faction_skills_faction_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(
        :skill_id,
        references(:skills,
          column: :id,
          name: "faction_skills_skill_id_fkey",
          type: :bigint,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )
    end

    create table(:faction_reactions, primary_key: false) do
      add(:adjustment, :bigint, null: false, default: 0)

      add(
        :source_id,
        references(:factions,
          column: :id,
          name: "faction_reactions_source_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(
        :target_id,
        references(:factions,
          column: :id,
          name: "faction_reactions_target_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )
    end

    alter table(:class_skills) do
      remove(:flags)
    end
  end

  def down do
    alter table(:class_skills) do
      add(:flags, {:array, :text}, null: false, default: [])
    end

    drop(constraint(:faction_reactions, "faction_reactions_source_id_fkey"))

    drop(constraint(:faction_reactions, "faction_reactions_target_id_fkey"))

    drop(table(:faction_reactions))

    drop(constraint(:faction_skills, "faction_skills_faction_id_fkey"))

    drop(constraint(:faction_skills, "faction_skills_skill_id_fkey"))

    drop(table(:faction_skills))

    drop(constraint(:factions, "factions_attribute1_id_fkey"))

    drop(constraint(:factions, "factions_attribute2_id_fkey"))

    drop(table(:factions))
  end
end

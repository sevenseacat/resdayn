defmodule Resdayn.Repo.Migrations.MakeReferencesReferencable do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    alter table(:creature_levelled_lists) do
      modify(
        :id,
        references(:referencable_objects,
          column: :id,
          name: "creature_levelled_lists_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end

    create index(:creature_levelled_lists, [:id])

    alter table(:activators) do
      modify(
        :id,
        references(:referencable_objects,
          column: :id,
          name: "activators_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end

    create index(:activators, [:id])

    alter table(:doors) do
      modify(
        :id,
        references(:referencable_objects,
          column: :id,
          name: "doors_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end

    create index(:doors, [:id])
  end

  def down do
    drop_if_exists(index(:doors, [:id]))

    drop(constraint(:doors, "doors_id_fkey"))

    alter table(:doors) do
      modify(:id, :text)
    end

    drop_if_exists(index(:activators, [:id]))

    drop(constraint(:activators, "activators_id_fkey"))

    alter table(:activators) do
      modify(:id, :text)
    end

    drop_if_exists(index(:creature_levelled_lists, [:id]))

    drop(constraint(:creature_levelled_lists, "creature_levelled_lists_id_fkey"))

    alter table(:creature_levelled_lists) do
      modify(:id, :text)
    end
  end
end

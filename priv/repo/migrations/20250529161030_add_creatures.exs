defmodule Resdayn.Repo.Migrations.AddCreatures do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:creatures, primary_key: false) do
      add(
        :id,
        references(:referencable_objects,
          column: :id,
          name: "creatures_id_fkey",
          type: :text,
          prefix: "public"
        ),
        primary_key: true,
        null: false
      )

      add(:name, :text)
      add(:type, :text, null: false)
      add(:nif_model_filename, :text, null: false)
      add(:level, :bigint, null: false)
      add(:gold, :bigint, null: false)
      add(:scale, :float, default: 1.0)
      add(:soul_size, :bigint, null: false)
      add(:health, :bigint)
      add(:magicka, :bigint)
      add(:fatigue, :bigint)
      add(:combat, :bigint)
      add(:magic, :bigint)
      add(:stealth, :bigint)
      add(:attacks, {:array, {:array, :integer}}, null: false)
      add(:attributes, {:array, :map}, null: false, default: [])
      add(:alert, :map, null: false)
      add(:spell_links, {:array, :map}, null: false, default: [])
      add(:services_offered, {:array, :text}, null: false, default: [])
      add(:items_vendored, {:array, :text}, null: false, default: [])
      add(:transport_options, {:array, :map})
      add(:ai_packages, {:array, :map}, default: [])
      add(:creature_flags, {:array, :text}, null: false, default: [])
      add(:sound_generator_key, :text)
      add(:flags, {:array, :text}, null: false, default: [])

      add(
        :script_id,
        references(:scripts,
          column: :id,
          name: "creatures_script_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:creatures, "creatures_id_fkey"))

    drop(constraint(:creatures, "creatures_script_id_fkey"))

    drop(table(:creatures))
  end
end

defmodule Resdayn.Repo.Migrations.CreateMagicEffects do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:magic_effects, primary_key: false) do
      add(:id, :bigint, null: false, primary_key: true)
      add(:description, :text)
      add(:size, :float, null: false)
      add(:color, :text, null: false)
      add(:speed, :float, null: false)
      add(:base_cost, :float, null: false)
      add(:size_cap, :float, null: false)
      add(:icon_filename, :text, null: false)
      add(:particle_texture_filename, :text, null: false)
      add(:area_visual, :text, default: "VFX_DefaultArea")
      add(:bolt_visual, :text, default: "VFX_DefaultBolt")
      add(:casting_visual, :text, default: "VFX_DefaultCast")
      add(:hit_visual, :text, default: "VFX_DefaultHit")
      add(:allows_spellmaking, :boolean, null: false)
      add(:allows_enchanting, :boolean, null: false)
      add(:negative_light, :boolean, null: false)
      add(:flags, :map, null: false)

      add(
        :game_setting_id,
        references(:game_settings,
          column: :name,
          name: "magic_effects_game_setting_id_fkey",
          type: :text,
          prefix: "public"
        ),
        null: false
      )

      add(
        :skill_id,
        references(:skills,
          column: :id,
          name: "magic_effects_skill_id_fkey",
          type: :bigint,
          prefix: "public"
        ),
        null: false
      )

      add(
        :area_sound_id,
        references(:sounds,
          column: :id,
          name: "magic_effects_area_sound_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :bolt_sound_id,
        references(:sounds,
          column: :id,
          name: "magic_effects_bolt_sound_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :casting_sound_id,
        references(:sounds,
          column: :id,
          name: "magic_effects_casting_sound_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :hit_sound_id,
        references(:sounds,
          column: :id,
          name: "magic_effects_hit_sound_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:magic_effects, "magic_effects_game_setting_id_fkey"))

    drop(constraint(:magic_effects, "magic_effects_skill_id_fkey"))

    drop(constraint(:magic_effects, "magic_effects_area_sound_id_fkey"))

    drop(constraint(:magic_effects, "magic_effects_bolt_sound_id_fkey"))

    drop(constraint(:magic_effects, "magic_effects_casting_sound_id_fkey"))

    drop(constraint(:magic_effects, "magic_effects_hit_sound_id_fkey"))

    drop(table(:magic_effects))
  end
end

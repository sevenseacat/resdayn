defmodule Resdayn.Repo.Migrations.AddInventoryItems do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:inventory_items, primary_key: false) do
      add(:id, :bigserial, null: false, primary_key: true)
      add(:count, :bigint, null: false, default: 1)
      add(:restocking?, :boolean, null: false, default: false)
      add(:flags, {:array, :text}, null: false, default: [])

      add(
        :npc_id,
        references(:npcs,
          column: :id,
          name: "inventory_items_npc_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :tool_id,
        references(:tools,
          column: :id,
          name: "inventory_items_tool_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :clothing_id,
        references(:clothing,
          column: :id,
          name: "inventory_items_clothing_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :weapon_id,
        references(:weapons,
          column: :id,
          name: "inventory_items_weapon_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :armor_id,
        references(:armor,
          column: :id,
          name: "inventory_items_armor_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :book_id,
        references(:books,
          column: :id,
          name: "inventory_items_book_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :ingredient_id,
        references(:ingredients,
          column: :id,
          name: "inventory_items_ingredient_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :potion_id,
        references(:potions,
          column: :id,
          name: "inventory_items_potion_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :alchemy_apparatus_id,
        references(:alchemy_apparatus,
          column: :id,
          name: "inventory_items_alchemy_apparatus_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :light_id,
        references(:lights,
          column: :id,
          name: "inventory_items_light_id_fkey",
          type: :text,
          prefix: "public"
        )
      )

      add(
        :miscellaneous_item_id,
        references(:miscellaneous_items,
          column: :id,
          name: "inventory_items_miscellaneous_item_id_fkey",
          type: :text,
          prefix: "public"
        )
      )
    end
  end

  def down do
    drop(constraint(:inventory_items, "inventory_items_npc_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_tool_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_clothing_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_weapon_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_armor_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_book_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_ingredient_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_potion_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_alchemy_apparatus_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_light_id_fkey"))

    drop(constraint(:inventory_items, "inventory_items_miscellaneous_item_id_fkey"))

    drop(table(:inventory_items))
  end
end
